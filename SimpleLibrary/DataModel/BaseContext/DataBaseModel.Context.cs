//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleLibrary.DataModel.BaseContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Borrow> Borrows { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
    
        public virtual ObjectResult<Rental_GetBooksList_Result> Rental_GetBooksList(string title, string author, Nullable<int> issueYear, Nullable<bool> isAvaible)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var issueYearParameter = issueYear.HasValue ?
                new ObjectParameter("IssueYear", issueYear) :
                new ObjectParameter("IssueYear", typeof(int));
    
            var isAvaibleParameter = isAvaible.HasValue ?
                new ObjectParameter("IsAvaible", isAvaible) :
                new ObjectParameter("IsAvaible", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rental_GetBooksList_Result>("Rental_GetBooksList", titleParameter, authorParameter, issueYearParameter, isAvaibleParameter);
        }
    }
}
